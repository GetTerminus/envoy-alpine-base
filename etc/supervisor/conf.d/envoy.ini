# Supervisor does not support starting a program after another has finished.
# To work around this, we define all the programs that should run, and
# listeners to listen for one to exit, then call the next one.
# Only the first program in the chain should have autostart=true.

##################
# Envoy Programs #
##################

# Run the configuration script, this will interpolate and write the config files for Envoy
[program:envoy_config]
command=/usr/local/bin/configure.py /etc/envoy/
priority=900
startsecs=0
autorestart=false
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

# Envoy itself
[program:envoy]
command=/usr/local/bin/envoy -c /etc/envoy/envoy.yaml --v2-config-only --service-cluster c0 --service-node n0 --log-level %(ENV_ENVOY_LOG_LEVEL)s
autostart=false
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0

###################
# Envoy Listeners #
###################

# Generate certs once the config files have been written
[eventlistener:envoy_configured]
command=command_executor.py supervisorctl start envoy
autorestart=false
process_name=envoy_config
events=PROCESS_STATE_EXITED

# Stop supervisor if Envoy exits or can't run (this will also stop the container)
[eventlistener:envoy_exit]
command=command_executor.py supervisorctl shutdown
process_name=envoy
events=PROCESS_STATE_FATAL
